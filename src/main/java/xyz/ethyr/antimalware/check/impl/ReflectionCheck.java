package xyz.ethyr.antimalware.check.impl;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.objectweb.asm.tree.MethodInsnNode;
import xyz.ethyr.antimalware.AntiMalware.Plugin;
import xyz.ethyr.antimalware.check.Check;
import xyz.ethyr.antimalware.helper.BlockHelper;

public class ReflectionCheck implements Check {

  /*
  I must replace that with something else
   */

  private final List<String> classes = new ArrayList<>();

  @Override
  public void check(Plugin plugin) {
    classes.clear();
    plugin.getClasses().forEach(classNode -> classNode.methods.stream()
        .flatMap(methodNode -> Arrays.stream(methodNode.instructions.toArray()))
        .filter(node -> node instanceof MethodInsnNode)
        .forEach(node -> {
          MethodInsnNode method = (MethodInsnNode) node;
          String name = method.owner + "." + method.name;
          if (BlockHelper.isLimitedMethod(name)) {
            classes.add(classNode.name);
          }
        }));

    if (!classes.isEmpty()) {//bro wtf is that xd
      plugin.addLog(
          "Classes that contains reflections that can be used to hide method invoke: \n[\n" + String
              .join("\n", classes) + "\n]");
    }
  }
}
